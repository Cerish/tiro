<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.cerish.mapper.StudentMapper">
    <!--  自定义的 表格列 - 类属性 对应  -->
    <resultMap id="BaseResultMap" type="cn.cerish.entity.Student">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="name" property="username" jdbcType="CHAR"/>
        <result column="password" property="password" jdbcType="CHAR"/>
        <result column="id_card" property="IdCard" jdbcType="CHAR"/>
        <result column="age" property="age" jdbcType="INTEGER"/>
        <result column="college_id" property="collegeId" jdbcType="INTEGER"/>
        <result column="major_id" property="majorId" jdbcType="INTEGER"/>
        <result column="class_id" property="classId" jdbcType="INTEGER"/>
        <result column="mobile" property="mobile" jdbcType="CHAR"/>
        <result column="address" property="address" jdbcType="VARCHAR"/>
        <result column="birth" property="birth" jdbcType="DATE"/>
        <result column="admission_time" property="admissionTime" jdbcType="DATE"/>
        <result column="gender" property="gender" jdbcType="BIT"/>
        <result column="enabled" property="enabled" jdbcType="BIT"/>
        <result column="role_id" property="roleId" jdbcType="INTEGER"/>
        <result column="rname" property="roleName" jdbcType="CHAR"/>
        <result column="rnameZh" property="roleNameZh" jdbcType="CHAR"/>
        <result column="student_no" property="studentNo" jdbcType="CHAR"/>
        <result column="cname" property="className" jdbcType="CHAR"/>
        <result column="mname" property="majorName" jdbcType="CHAR"/>
        <result column="mcname" property="collegeName" jdbcType="CHAR"/>
    </resultMap>
    <select id="getStudentById" resultMap="BaseResultMap">
        select s.*, r.name as rname, r.nameZh as rnameZh from student as s
        inner join (select id, name, nameZh from role) as r on s.role_id = r.id
        where s.id = #{id}
    </select>
    <select id="loadUserByUsername" resultMap="BaseResultMap">
        select s.*, r.name as rname, r.nameZh as rnameZh from student as s
        inner join (select id, name, nameZh from role) as r on s.role_id = r.id
         where s.name = #{username}
    </select>
    <select id="getStudentByPage" resultMap="BaseResultMap">
        select s.*, c.name as cname, m.nameZh as mname, m.college_nameZh as mcname,
        r.name as rname, r.nameZh as rnameZh from student as s
        inner join (select id, name, nameZh from role) as r on t.role_id = r.id
        inner join (select id, name from class) as c on s.class_id = c.id 
        INNER JOIN (select id, nameZh,college_id, college_nameZh from major) as m on s.major_id = m.id
        <where>
            <if test="student.username != null">
                s.name like concat('%', #{student.username}, '%')
            </if>
            <if test="student.className != null">
                c.name like concat('%', #{student.className}, '%')
            </if>
            <if test="student.address != null">
                and s.address like concat('%', #{student.address}, '%')
            </if>
            <if test="student.studentNo != null">
                and s.student_no like concat('%', #{student.studentNo}, '%')
            </if>
            <if test="student.admissionTime != null">
                and s.admission_time like concat('%', #{student.admissionTime}, '%')
            </if>
            <if test="student.collegeId != 0">
                and s.college_id = #{student.collegeId, jdbcType = INTEGER}
            </if>
            <if test="student.majorId != 0">
                and s.major_id = #{student.majorId, jdbcType = INTEGER}
            </if>
            <if test="student.classId != 0">
                and s.class_id = #{student.classId, jdbcType = INTEGER}
            </if>
        </where>
        <if test="page != null and size != null">
            limit #{page},#{size}
        </if>
    </select>
    <select id="getTotal" resultType="java.lang.Long">
        select count(*) from student as s inner join
        (select id, name from class) as c on s.class_id = c.id INNER JOIN
        (select id, nameZh, college_nameZh from major) as m on s.major_id = m.id
        <where>
            <if test="student.username != null">
                s.name like concat('%', #{student.username}, '%')
            </if>
            <if test="student.className != null">
                c.name like concat('%', #{student.className}, '%')
            </if>
            <if test="student.address != null">
                and s.address like concat('%', #{student.address}, '%')
            </if>
            <if test="student.studentNo != null">
                and s.student_no like concat('%', #{student.studentNo}, '%')
            </if>
            <if test="student.admissionTime != null">
                and s.admission_time like concat('%', #{student.admissionTime}, '%')
            </if>
            <if test="student.collegeId != 0">
                and s.college_id = #{student.collegeId, jdbcType = INTEGER}
            </if>
            <if test="student.majorId != 0">
                and s.major_id = #{student.majorId, jdbcType = INTEGER}
            </if>
            <if test="student.classId != 0">
                and s.class_id = #{student.classId, jdbcType = INTEGER}
            </if>
        </where>
    </select>
    <select id="getStudentByClassId" resultMap="BaseResultMap">
        select s.*, r.name as rname, r.nameZh as rnameZh from student as s
        inner join (select id, name, nameZh from role) as r on s.role_id = r.id
        where s.class_id = #{classId, jdbcType=INTEGER}
    </select>
    <update id="updateStudentById" parameterType="cn.cerish.entity.Student">
        update student
        <set>
            <if test="username != null">
                name = #{username,jdbcType=CHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=CHAR},
            </if>
            <if test="IdCard != null">
                id_card = #{IdCard,jdbcType=CHAR},
            </if>
            <if test="age != null">
                age = #{age,jdbcType=INTEGER},
            </if>
            <if test="collegeId != null">
                college_id = #{collegeId,jdbcType=INTEGER},
            </if>
            <if test="majorId != null">
                major_id = #{majorId,jdbcType=INTEGER},
            </if>
            <if test="classId != null">
                class_id = #{classId,jdbcType=INTEGER},
            </if>
            <if test="mobile != null">
                mobile = #{mobile,jdbcType=CHAR},
            </if>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="birth != null">
                birth = #{birth,jdbcType=DATE},
            </if>
            <if test="admissionTime != DATE">
                admission_time = #{admissionTime,jdbcType=DATE},
            </if>
            <if test="gender != null">
                gender = #{gender,jdbcType=BIT},
            </if>
            <if test="enabled != null">
                enabled = #{enabled,jdbcType=BIT},
            </if>
            <if test="roleId != null">
                role_id = #{roleId,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <delete id="deleteStudentById" parameterType="java.lang.Integer">
        delete from student
        where id = #{id,jdbcType=INTEGER}
    </delete>

    <insert id="addStudent" parameterType="cn.cerish.entity.Student" useGeneratedKeys="true">
        insert into student
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="IdCard != null">
                id_card,
            </if>
            <if test="age != null">
                age,
            </if>
            <if test="collegeId != null">
                college_id,
            </if>
            <if test="majorId != null">
                major_id,
            </if>
            <if test="classId != null">
                class_id,
            </if>
            <if test="mobile != null">
                mobile,
            </if>
            <if test="address != null">
                address,
            </if>
            <if test="birth != null">
                birth,
            </if>
            <if test="admissionTime != DATE">
                admission_time,
            </if>
            <if test="gender != null">
                gender,
            </if>
            <if test="enabled != null">
                enabled,
            </if>
            <if test="roleId != null">
                role_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="username != null">
                #{username,jdbcType=CHAR},
            </if>
            <if test="password != null">
                 #{password,jdbcType=CHAR},
            </if>
            <if test="IdCard != null">
                #{IdCard,jdbcType=CHAR},
            </if>
            <if test="age != null">
                #{age,jdbcType=INTEGER},
            </if>
            <if test="collegeId != null">
                #{collegeId,jdbcType=INTEGER},
            </if>
            <if test="majorId != null">
                #{majorId,jdbcType=INTEGER},
            </if>
            <if test="classId != null">
                #{classId,jdbcType=INTEGER},
            </if>
            <if test="mobile != null">
                #{mobile,jdbcType=CHAR},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="birth != null">
                #{birth,jdbcType=DATE},
            </if>
            <if test="admissionTime != DATE">
                #{admissionTime,jdbcType=DATE},
            </if>
            <if test="gender != null">
                #{gender,jdbcType=BIT},
            </if>
            <if test="enabled != null">
                #{enabled,jdbcType=BIT},
            </if>
            <if test="roleId != null">
                #{roleId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
</mapper>