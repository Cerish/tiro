<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.cerish.mapper.ClassMapper">
    <!--  自定义的 表格列 - 类属性 对应  -->
    <resultMap id="BaseResultMap" type="cn.cerish.entity.Class">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="CHAR"/>
        <result column="teacher_id" property="teacherId" jdbcType="INTEGER"/>
        <result column="tname" property="teacherName" jdbcType="CHAR"/>
        <result column="student_id" property="studentId" jdbcType="INTEGER"/>
        <result column="sname" property="studentName" jdbcType="CHAR"/>
        <result column="college_id" property="collegeId" jdbcType="INTEGER"/>
        <result column="major_id" property="majorId" jdbcType="INTEGER"/>
    </resultMap>
    <resultMap id="AllClassInfo" type="cn.cerish.entity.Class" extends="BaseResultMap">
        <association property="major" javaType="cn.cerish.entity.Major">
            <id column="mid" property="id"/>
            <result column="mname" property="name" jdbcType="CHAR"/>
            <result column="mnameZh" property="nameZh" jdbcType="CHAR"/>
            <result column="mcampus_id" property="campusId" jdbcType="INTEGER"/>
            <result column="mcampus_name" property="campusName" jdbcType="CHAR"/>
            <result column="mcampus_nameZh" property="campusNameZh" jdbcType="CHAR"/>
            <result column="mcollege_id" property="collegeId" jdbcType="INTEGER"/>
            <result column="mcollege_name" property="collegeName" jdbcType="CHAR"/>
            <result column="mcollege_nameZh" property="collegeNameZh" jdbcType="CHAR"/>
        </association>
    </resultMap>
    <select id="getClassById" resultMap="AllClassInfo">
        select c.id, c.name, c.teacher_id, t.name as tname, c.student_id, s.name as sname,c.college_id,c.major_id,
        m.id as mid, m.name as mname, m.nameZh as mnameZh, m.campus_id as mcampus_id, m.campus_name as mcampus_name,
         m.campus_nameZh as mcampus_nameZh, m.college_id as mcollege_id, m.college_name as mcollege_name, m.college_nameZh as mcollege_nameZh
         from class as c left join major as m on c.major_id = m.id
         left join (select id, name from teacher) as t on c.teacher_id = t.id
         left join (select id, name from student) as s on c.student_id = s.id
         where c.id = #{id}
    </select>
    <select id="getClassByMajorId" resultMap="BaseResultMap">
        select * from class
        where major_id = #{id, jdbcType=INTEGER}
    </select>
    <select id="getClassByCollegeId" resultMap="BaseResultMap">
        select * from class
        where college_id = #{id, jdbcType=INTEGER}
    </select>
    <select id="getClassByPage" resultMap="AllClassInfo">
        select c.id, c.name, c.teacher_id, t.name as tname, c.student_id, s.name as sname,c.college_id,c.major_id,
        m.id as mid, m.name as mname, m.nameZh as mnameZh, m.campus_id as mcampus_id, m.campus_name as mcampus_name,
        m.campus_nameZh as mcampus_nameZh, m.college_id as mcollege_id, m.college_name as mcollege_name, m.college_nameZh as mcollege_nameZh
        from class as c left join major as m on c.major_id = m.id
        left join (select id, name from teacher) as t on c.teacher_id = t.id
        left join (select id, name from student) as s on c.student_id = s.id
        <where>
            <if test="aclass.name !=null and aclass.name!=''">
                and c.name like concat('%',#{aclass.name},'%')
            </if>
            <if test="aclass.teacherName !=null and aclass.teacherName!=''">
                and t.name like concat('%',#{aclass.teacherName},'%')
            </if>
            <if test="aclass.studentName !=null and aclass.studentName!=''">
                and s.name like concat('%',#{aclass.studentName},'%')
            </if>
            <if test="aclass.collegeId !=0">
                and c.college_id =#{aclass.collegeId}
            </if>
            <if test="aclass.majorId !=0">
                and c.major_id =#{aclass.majorId}
            </if>
        </where>
        <if test="page != null and size!= null">
            limit #{page},#{size}
        </if>
    </select>
    <select id="getTotal" resultType="java.lang.Long">
        select count(*) from class as c
        left join (select id, name from teacher) as t on c.teacher_id = t.id
        left join (select id, name from student) as s on c.student_id = s.id
        <where>
            <if test="aclass!=null">
                <if test="aclass.name !=null and aclass.name!=''">
                    and c.name like concat('%',#{aclass.name},'%')
                </if>
                <if test="aclass.teacherName !=null and aclass.teacherName!=''">
                    and t.name like concat('%',#{aclass.teacherName},'%')
                </if>
                <if test="aclass.studentName !=null and aclass.studentName!=''">
                    and t.name like concat('%',#{aclass.studentName},'%')
                </if>
                <if test="aclass.collegeId !=0">
                    and c.college_id =#{aclass.collegeId}
                </if>
                <if test="aclass.majorId !=0">
                    and c.major_id =#{aclass.majorId}
                </if>
            </if>
        </where>

    </select>

    <update id="updateClassById" parameterType="cn.cerish.entity.Class">
        update class as c
        <set>
            <if test="name != null">
                c.name = #{name,jdbcType=CHAR},
            </if>
            <if test="teacherId != 0">
                c.teacher_id = #{teacherId,jdbcType=INTEGER},
            </if>
            <if test="studentId != 0">
                c.student_id = #{studentId,jdbcType=INTEGER},
            </if>
            <if test="collegeId != 0">
                c.college_id = #{collegeId,jdbcType=INTEGER},
            </if>
            <if test="majorId != 0">
                c.major_id = #{majorId,jdbcType=INTEGER},
            </if>
        </set>
        <where>
            <if test="id != 0">
                c.id = #{id,jdbcType=INTEGER}
            </if>
        </where>
    </update>

    <delete id="deleteClassById" parameterType="java.lang.Integer">
        delete from class
        where id = #{id,jdbcType=INTEGER}
    </delete>

    <insert id="addClass" parameterType="cn.cerish.entity.Class" useGeneratedKeys="true">
        insert into class
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != 0">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="teacherId != 0">
                teacher_id,
            </if>
            <if test="studentId != 0">
                student_id,
            </if>
            <if test="collegeId != 0">
                college_id,
            </if>
            <if test="majorId != 0">
                major_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != 0">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=CHAR},
            </if>
            <if test="teacherId != 0">
                #{teacherId,jdbcType=INTEGER},
            </if>
            <if test="studentId != 0">
                #{studentId,jdbcType=INTEGER},
            </if>
            <if test="collegeId != 0">
                #{collegeId,jdbcType=INTEGER},
            </if>
            <if test="majorId != 0">
                #{majorId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
</mapper>